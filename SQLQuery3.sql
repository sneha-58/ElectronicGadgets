use TechShop;
go

--TASK 3
--1) Write an SQL query to retrieve a list of all orders along with customer information (e.g., customer name) for each order.
select c.firstName + ' ' + c.lastName as customerName, c.phone, c.customerAddress AS address, o.orderID, p.productName, od.quantity
from Customers c
JOIN Orders o on c.customerID = o.customerID
JOIN OrderDetails od on o.orderID = od.orderID
JOIN Products p on od.productID = p.productID;

--2) Write an SQL query to find the total revenue generated by each electronic gadget product. Include the product name and the total revenue.
select p.productName, sum(o.totalAmount)as [Total Revenue] , count(p.productID) as Nos from Orders o
join OrderDetails od on od.orderID = o.orderID
join Products p on p.productID = od.productID
group by p.productName;

--3) Write an SQL query to list all customers who have made at least one purchase. Include their names and contact information.
select firstName+' '+lastName as customerName, phone, email,od.quantity 
from Customers c
join Orders o on o.customerID = c.customerID
join OrderDetails od on od.orderID = o.orderID
where od.quantity >= 1;

--4) Write an SQL query to find the most popular electronic gadget, which is the one with the highest total quantity ordered. Include the product name and the total quantity ordered.
select p.productName, max(od.quantity) from Products p
join OrderDetails od on p.productID = od.productID;

--5) Write an SQL query to retrieve a list of electronic gadgets along with their corresponding categories.
select * from Products;  -- since all the products come under the category of electronic gadgets

--6) Write an SQL query to calculate the average order value for each customer. Include the customer's name and their average order value.
select (c.firstName+' '+c.lastName) as CustomerName, avg(o.totalAmount) Average 
from Customers c
join Orders o
on c.customerID = o.customerID
group by c.customerID, c.firstName, c.lastName;

--7) Write an SQL query to find the order with the highest total revenue. Include the order ID, customer information, and the total revenue.
select top 1
c.customerID, (c.firstName+' '+c.lastName) as CustomerName,o.orderID, o.totalAmount
from Customers c
join Orders o on c.customerID = o.customerID
order by totalAmount desc;


--8) Write an SQL query to list electronic gadgets and the number of times each product has been ordered.
select p.productName, od.quantity from Products p
join OrderDetails od
on p.productID = od.productID;

--9) Write an SQL query to find customers who have purchased a specific electronic gadget product. Allow users to input the product name as a parameter.
declare @productName varchar(30) = 'Mouse';

select c.customerID, (c.firstname+' '+c.lastname) as [Customer Name], c.phone, c.email from Customers c
join Orders o on o.customerID = c.customerID
join OrderDetails od on od.orderID = o.orderID
join Products p on p.productID = od.productID
where p.productName = @productName;

--10) Write an SQL query to calculate the total revenue generated by all orders placed within a specific time period. Allow users to input the start and end dates as parameters.

declare @start date = '2025-03-01';
declare @end date = '2025-03-06';

select sum(totalAmount) as [Total Revenue] from Orders
where orderDate between @start and @end;